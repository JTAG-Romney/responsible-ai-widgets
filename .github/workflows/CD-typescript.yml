# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CD
env:
  folder_to_upload: dist/apps/dashboard
  blob_account: responsibleai
  blob_container: latest

on:
  push:
    branches: [main]

jobs:
  cd-typescript-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install yarn
        run: npm install yarn -g
      - name: Install
        run: yarn install --frozen-lock-file
      - name: bump version
        run: yarn auto-version
      - name: CI
        run: yarn ci
      - name: Upload a Build result
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
      - id: publish_url
        run: |
          echo "::set-output name=url::https://${blob_account}.blob.core.windows.net/${blob_container}/index.html"
      - name: Upload dashboard ${{steps.publish_url.outputs.url}}
        uses: Azure/cli@v1.0.0
        with:
          azcliversion: 2.16.0
          inlineScript: |
            az storage blob sync -c "${{env.blob_container}}" --account-name "${{env.blob_account}}" -s "${{env.folder_to_upload}}" --connection-string="${{secrets.AZURE_STORAGE_CONNECTION_STRING}}"

  cd-typescript-publish:
    needs: cd-typescript-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
        package: [core-ui, mlchartlib, fairness, interpret, localization]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - id: download
        name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - id: publish
        name: NPM Publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.KE_NPM_TOKEN }}
          package: ${{steps.download.outputs.download-path}}/libs/${{ matrix.package }}/package.json
          dry-run: false
      - if: steps.publish.type != 'none'
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"

  release-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
        package: [raiwidgets]

    steps:

      # build wheel
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: install typescript dependencies
        run: |
          yarn install
      - name: auto version
        run: |
          yarn auto-version -r
      - name: build typescript 
        run: |
          yarn buildall
      - name: update and upgrade pip, setuptools, wheel, and twine
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel twine
      - name: install requirements.txt
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
        working-directory: ${{ matrix.package }}
      - name: pip freeze
        run: pip freeze
      - name: replace README for raiwidgets
        if: ${{ matrix.package == 'raiwidgets' }}
        run: |
          sed -i 's/(.\/img\//(https:\/\/raw.githubusercontent.com\/microsoft\/responsible-ai-widgets\/main\/img\//g' README.md
          cp ./README.md ./raiwidgets/
      - name: build wheel
        run: python setup.py sdist bdist_wheel
        working-directory: ${{ matrix.package }}

      # run tests before publishing to PyPI
      - name: install wheel locally
        run: find ./dist/ -name '*.whl' -exec pip install {} \;
        working-directory: ${{ matrix.package }}
      - name: run tests
        run: pytest ./tests/
        working-directory: ${{ matrix.package }}

      # publish to PyPI
      - name: publish package to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN_RAIWIDGETS }}
          repository_url: https://msdata.pkgs.visualstudio.com/Vienna/_packaging/responsible-ai/pypi/upload
          packages_dir: ${{ matrix.package }}/dist/
